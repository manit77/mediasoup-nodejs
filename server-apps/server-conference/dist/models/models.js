/**
 * active participant, the user has already authenticated
 */
export class Participant {
    participantId = ""; //generated by server to keep track of connections
    userName = ""; //username for the user, unique, used to login ie from a database
    displayName = ""; //display name for the user
    socket = undefined; //websocket connection
    conferenceRoom = undefined; //reference to a conf room
}
export class ConferenceRoom {
    id;
    roomURI;
    roomId;
    roomToken;
    participants = new Map();
    removeParticipant(id) {
        this.participants.delete(id);
    }
}
//# sourceMappingURL=models.js.map